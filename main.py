from keep_alive import keep_alive
keep_alive()
import os
import math
import requests
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor
from dotenv import load_dotenv

load_dotenv()
bot = Bot(token=os.getenv("TOKEN"))
dp = Dispatcher(bot)

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
DP_EXPRESS_RATE = 789  # ‚ÇΩ/–∫–≥
COMMISSION = 0.10
YUAN_MARKUP_PERCENT = 0.11

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton("üëü –û–±—É–≤—å"), KeyboardButton("üëï –§—É—Ç–±–æ–ª–∫–∞ / –•—É–¥–∏ / –®—Ç–∞–Ω—ã")],
        [KeyboardButton("‚ùì –î—Ä—É–≥–æ–µ")],
        [KeyboardButton("üîÅ –ù–æ–≤—ã–π —Ä–∞—Å—á—ë—Ç")]
    ],
    resize_keyboard=True
)

# –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –≤–µ—Å–∞
user_weights = {}

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –¶–ë –†–§
def get_cb_yuan_rate():
    try:
        response = requests.get("https://www.cbr-xml-daily.ru/daily_json.js")
        data = response.json()
        return data["Valute"]["CNY"]["Value"]
    except:
        return 12.0  # –∑–∞–ø–∞—Å–Ω–æ–π –∫—É—Ä—Å

@dp.message_handler(commands=["start"])
@dp.message_handler(lambda message: message.text == "üîÅ –ù–æ–≤—ã–π —Ä–∞—Å—á—ë—Ç")
async def cmd_start(message: types.Message):
    user_weights.pop(message.chat.id, None)
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ç–æ–≤–∞—Ä–∞:", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text.startswith("üëü"))
async def handle_shoes(message: types.Message):
    user_weights[message.chat.id] = 1.5
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ –≤ —é–∞–Ω—è—Ö:")

@dp.message_handler(lambda message: "—Ñ—É—Ç–±–æ–ª–∫–∞" in message.text.lower() or "—Ö—É–¥–∏" in message.text.lower() or "—à—Ç–∞–Ω—ã" in message.text.lower())
async def handle_clothes(message: types.Message):
    user_weights[message.chat.id] = 0.7
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ –≤ —é–∞–Ω—è—Ö:")

@dp.message_handler(lambda message: "–¥—Ä—É–≥–æ–µ" in message.text.lower())
async def handle_other(message: types.Message):
    await message.answer("üì© –ü–æ –¥–æ—Å—Ç–∞–≤–∫–µ –¥—Ä—É–≥–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º: @oleglobok")

@dp.message_handler()
async def handle_price(message: types.Message):
    if message.chat.id not in user_weights:
        await message.answer("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Ç–æ–≤–∞—Ä–∞. –ù–∞–∂–º–∏—Ç–µ /start")
        return

    try:
        yuan_price = float(message.text.replace(",", "."))
    except ValueError:
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ü–µ–Ω—É –≤ —é–∞–Ω—è—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, 199.9).")
        return

    weight = user_weights[message.chat.id]
    rub_yuan_rate = get_cb_yuan_rate() * (1 + YUAN_MARKUP_PERCENT)
    price_rub = yuan_price * rub_yuan_rate
    price_with_commission = price_rub * (1 + COMMISSION)
    delivery = weight * DP_EXPRESS_RATE
    total = price_with_commission + delivery

    await message.answer(
        f"üí∏ –ö—É—Ä—Å —é–∞–Ω—è: {rub_yuan_rate:.2f}‚ÇΩ\n"
        f"üõçÔ∏è –¶–µ–Ω–∞ —Å –∫–æ–º–∏—Å—Å–∏–µ–π (10%): {math.ceil(price_with_commission)}‚ÇΩ\n"
        f"üì¶ –î–æ—Å—Ç–∞–≤–∫–∞: {math.ceil(delivery)}‚ÇΩ\n"
        f"üí∞ –ò—Ç–æ–≥: {math.ceil(total)}‚ÇΩ\n\n"
        f"üîÅ –•–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å –Ω–æ–≤—ã–π —Ä–∞—Å—á—ë—Ç? –ù–∞–∂–º–∏ /start –∏–ª–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá",
        reply_markup=keyboard
    )

if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
